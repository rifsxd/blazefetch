#include "helper.cpp"

std::string getDistoInfo() {
    FILE *fp = fopen("/etc/os-release", "r");
    if (fp) {
        int foundPrettyName = 0;
        char line[256];
        
        while (fgets(line, sizeof(line), fp)) {
            if (strstr(line, "PRETTY_NAME")) {
                char *name = strchr(line, '=') + 2;
                name[strlen(name) - 2] = '\0';
                fclose(fp);
                return  name;
            }
        }

        fclose(fp);
        return "\033[0mUnknown";
    } else {
        return "\033[0mUnknown";
    }
}

std::string getGlyphInfo() {
    std::string osName = getDistoInfo();
    
    if (osName.size() >= 6 && std::equal(osName.begin(), osName.begin() + 6, "arch", [](char a, char b) { return std::tolower(a) == std::tolower(b); })) {
        return blueColor + R"(
 ▄▄▄       ██▀███   ▄████▄   ██░ ██  ██▓     ██▓ ███▄    █  █    ██ ▒██   ██▒
▒████▄    ▓██ ▒ ██▒▒██▀ ▀█  ▓██░ ██▒▓██▒    ▓██▒ ██ ▀█   █  ██  ▓██▒▒▒ █ █ ▒░
▒██  ▀█▄  ▓██ ░▄█ ▒▒▓█    ▄ ▒██▀▀██░▒██░    ▒██▒▓██  ▀█ ██▒▓██  ▒██░░░  █   ░
░██▄▄▄▄██ ▒██▀▀█▄  ▒▓▓▄ ▄██▒░▓█ ░██ ▒██░    ░██░▓██▒  ▐▌██▒▓▓█  ░██░ ░ █ █ ▒ 
 ▓█   ▓██▒░██▓ ▒██▒▒ ▓███▀ ░░▓█▒░██▓░██████▒░██░▒██░   ▓██░▒▒█████▓ ▒██▒ ▒██▒
 ▒▒   ▓▒█░░ ▒▓ ░▒▓░░ ░▒ ▒  ░ ▒ ░░▒░▒░ ▒░▓  ░░▓  ░ ▒░   ▒ ▒ ░▒▓▒ ▒ ▒ ▒▒ ░ ░▓ ░
  ▒   ▒▒ ░  ░▒ ░ ▒░  ░  ▒    ▒ ░▒░ ░░ ░ ▒  ░ ▒ ░░ ░░   ░ ▒░░░▒░ ░ ░ ░░   ░▒ ░
  ░   ▒     ░░   ░ ░         ░  ░░ ░  ░ ░    ▒ ░   ░   ░ ░  ░░░ ░ ░  ░    ░  
      ░  ░   ░     ░ ░       ░  ░  ░    ░  ░ ░           ░    ░      ░    ░  
                   ░                                                         

        )";
    } else if (osName.size() >= 6 && std::equal(osName.begin(), osName.begin() + 6, "fedora", [](char a, char b) { return std::tolower(a) == std::tolower(b); })) {
        return blueColor + R"(
  █████▒▓█████ ▓█████▄  ▒█████   ██▀███   ▄▄▄      
▓██   ▒ ▓█   ▀ ▒██▀ ██▌▒██▒  ██▒▓██ ▒ ██▒▒████▄    
▒████ ░ ▒███   ░██   █▌▒██░  ██▒▓██ ░▄█ ▒▒██  ▀█▄  
░▓█▒  ░ ▒▓█  ▄ ░▓█▄   ▌▒██   ██░▒██▀▀█▄  ░██▄▄▄▄██ 
░▒█░    ░▒████▒░▒████▓ ░ ████▓▒░░██▓ ▒██▒ ▓█   ▓██▒
 ▒ ░    ░░ ▒░ ░ ▒▒▓  ▒ ░ ▒░▒░▒░ ░ ▒▓ ░▒▓░ ▒▒   ▓▒█░
 ░       ░ ░  ░ ░ ▒  ▒   ░ ▒ ▒░   ░▒ ░ ▒░  ▒   ▒▒ ░
 ░ ░       ░    ░ ░  ░ ░ ░ ░ ▒    ░░   ░   ░   ▒   
           ░  ░   ░        ░ ░     ░           ░  ░
                ░                                  
 
        )";
    } else if (osName.size() >= 6 && std::equal(osName.begin(), osName.begin() + 6, "cachyos", [](char a, char b) { return std::tolower(a) == std::tolower(b); })) {
        return blueColor + R"(
 ▄████▄   ▄▄▄       ▄████▄   ██░ ██▓██   ██▓ ▒█████    ██████ 
▒██▀ ▀█  ▒████▄    ▒██▀ ▀█  ▓██░ ██▒▒██  ██▒▒██▒  ██▒▒██    ▒ 
▒▓█    ▄ ▒██  ▀█▄  ▒▓█    ▄ ▒██▀▀██░ ▒██ ██░▒██░  ██▒░ ▓██▄   
▒▓▓▄ ▄██▒░██▄▄▄▄██ ▒▓▓▄ ▄██▒░▓█ ░██  ░ ▐██▓░▒██   ██░  ▒   ██▒
▒ ▓███▀ ░ ▓█   ▓██▒▒ ▓███▀ ░░▓█▒░██▓ ░ ██▒▓░░ ████▓▒░▒██████▒▒
░ ░▒ ▒  ░ ▒▒   ▓▒█░░ ░▒ ▒  ░ ▒ ░░▒░▒  ██▒▒▒ ░ ▒░▒░▒░ ▒ ▒▓▒ ▒ ░
  ░  ▒     ▒   ▒▒ ░  ░  ▒    ▒ ░▒░ ░▓██ ░▒░   ░ ▒ ▒░ ░ ░▒  ░ ░
░          ░   ▒   ░         ░  ░░ ░▒ ▒ ░░  ░ ░ ░ ▒  ░  ░  ░  
░ ░            ░  ░░ ░       ░  ░  ░░ ░         ░ ░        ░  
░                  ░                ░ ░                       

        )";
    } else if (osName.size() >= 6 && std::equal(osName.begin(), osName.begin() + 6, "ubuntu", [](char a, char b) { return std::tolower(a) == std::tolower(b); })) {
        return blueColor + R"(
 █    ██  ▄▄▄▄    █    ██  ███▄    █ ▄▄▄█████▓ █    ██ 
 ██  ▓██▒▓█████▄  ██  ▓██▒ ██ ▀█   █ ▓  ██▒ ▓▒ ██  ▓██▒
▓██  ▒██░▒██▒ ▄██▓██  ▒██░▓██  ▀█ ██▒▒ ▓██░ ▒░▓██  ▒██░
▓▓█  ░██░▒██░█▀  ▓▓█  ░██░▓██▒  ▐▌██▒░ ▓██▓ ░ ▓▓█  ░██░
▒▒█████▓ ░▓█  ▀█▓▒▒█████▓ ▒██░   ▓██░  ▒██▒ ░ ▒▒█████▓ 
░▒▓▒ ▒ ▒ ░▒▓███▀▒░▒▓▒ ▒ ▒ ░ ▒░   ▒ ▒   ▒ ░░   ░▒▓▒ ▒ ▒ 
░░▒░ ░ ░ ▒░▒   ░ ░░▒░ ░ ░ ░ ░░   ░ ▒░    ░    ░░▒░ ░ ░ 
 ░░░ ░ ░  ░    ░  ░░░ ░ ░    ░   ░ ░   ░       ░░░ ░ ░ 
   ░      ░         ░              ░             ░     
               ░                                       

        )";
    } else if (osName.size() >= 6 && std::equal(osName.begin(), osName.begin() + 6, "manjaro", [](char a, char b) { return std::tolower(a) == std::tolower(b); })) {
        return blueColor + R"(
 ███▄ ▄███▓ ▄▄▄       ███▄    █  ▄▄▄██▀▀▀▄▄▄       ██▀███   ▒█████  
▓██▒▀█▀ ██▒▒████▄     ██ ▀█   █    ▒██  ▒████▄    ▓██ ▒ ██▒▒██▒  ██▒
▓██    ▓██░▒██  ▀█▄  ▓██  ▀█ ██▒   ░██  ▒██  ▀█▄  ▓██ ░▄█ ▒▒██░  ██▒
▒██    ▒██ ░██▄▄▄▄██ ▓██▒  ▐▌██▒▓██▄██▓ ░██▄▄▄▄██ ▒██▀▀█▄  ▒██   ██░
▒██▒   ░██▒ ▓█   ▓██▒▒██░   ▓██░ ▓███▒   ▓█   ▓██▒░██▓ ▒██▒░ ████▓▒░
░ ▒░   ░  ░ ▒▒   ▓▒█░░ ▒░   ▒ ▒  ▒▓▒▒░   ▒▒   ▓▒█░░ ▒▓ ░▒▓░░ ▒░▒░▒░ 
░  ░      ░  ▒   ▒▒ ░░ ░░   ░ ▒░ ▒ ░▒░    ▒   ▒▒ ░  ░▒ ░ ▒░  ░ ▒ ▒░ 
░      ░     ░   ▒      ░   ░ ░  ░ ░ ░    ░   ▒     ░░   ░ ░ ░ ░ ▒  
       ░         ░  ░         ░  ░   ░        ░  ░   ░         ░ ░  
                                                                    
        )";
    /* } else if (osName.size() >= 6 && std::equal(osName.begin(), osName.begin() + 6, "placeholder", [](char a, char b) { return std::tolower(a) == std::tolower(b); })) {
        return purpleColor + R"(
 ██▓███   ██▓    ▄▄▄       ▄████▄  ▓█████  ██░ ██  ▒█████   ██▓    ▓█████▄ ▓█████  ██▀███  
▓██░  ██▒▓██▒   ▒████▄    ▒██▀ ▀█  ▓█   ▀ ▓██░ ██▒▒██▒  ██▒▓██▒    ▒██▀ ██▌▓█   ▀ ▓██ ▒ ██▒
▓██░ ██▓▒▒██░   ▒██  ▀█▄  ▒▓█    ▄ ▒███   ▒██▀▀██░▒██░  ██▒▒██░    ░██   █▌▒███   ▓██ ░▄█ ▒
▒██▄█▓▒ ▒▒██░   ░██▄▄▄▄██ ▒▓▓▄ ▄██▒▒▓█  ▄ ░▓█ ░██ ▒██   ██░▒██░    ░▓█▄   ▌▒▓█  ▄ ▒██▀▀█▄  
▒██▒ ░  ░░██████▒▓█   ▓██▒▒ ▓███▀ ░░▒████▒░▓█▒░██▓░ ████▓▒░░██████▒░▒████▓ ░▒████▒░██▓ ▒██▒
▒▓▒░ ░  ░░ ▒░▓  ░▒▒   ▓▒█░░ ░▒ ▒  ░░░ ▒░ ░ ▒ ░░▒░▒░ ▒░▒░▒░ ░ ▒░▓  ░ ▒▒▓  ▒ ░░ ▒░ ░░ ▒▓ ░▒▓░
░▒ ░     ░ ░ ▒  ░ ▒   ▒▒ ░  ░  ▒    ░ ░  ░ ▒ ░▒░ ░  ░ ▒ ▒░ ░ ░ ▒  ░ ░ ▒  ▒  ░ ░  ░  ░▒ ░ ▒░
░░         ░ ░    ░   ▒   ░           ░    ░  ░░ ░░ ░ ░ ▒    ░ ░    ░ ░  ░    ░     ░░   ░ 
             ░  ░     ░  ░░ ░         ░  ░ ░  ░  ░    ░ ░      ░  ░   ░       ░  ░   ░     
                          ░                                         ░                      
        )"; */ // More Coming Soon!
    } else {
        // Fallback asciii art (Linux)
        return orangeColor + R"(
 ██▓     ██▓ ███▄    █  █    ██ ▒██   ██▒
▓██▒    ▓██▒ ██ ▀█   █  ██  ▓██▒▒▒ █ █ ▒░
▒██░    ▒██▒▓██  ▀█ ██▒▓██  ▒██░░░  █   ░
▒██░    ░██░▓██▒  ▐▌██▒▓▓█  ░██░ ░ █ █ ▒ 
░██████▒░██░▒██░   ▓██░▒▒█████▓ ▒██▒ ▒██▒
░ ▒░▓  ░░▓  ░ ▒░   ▒ ▒ ░▒▓▒ ▒ ▒ ▒▒ ░ ░▓ ░
░ ░ ▒  ░ ▒ ░░ ░░   ░ ▒░░░▒░ ░ ░ ░░   ░▒ ░
  ░ ░    ▒ ░   ░   ░ ░  ░░░ ░ ░  ░    ░  
    ░  ░ ░           ░    ░      ░    ░  
        )" +
        orangeColor + "\n" + "ASCII art for this distribution is not available." + "\n";
    }
}